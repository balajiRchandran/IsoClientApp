@page "/Student/{username}"
@inject HttpClient Http;
@using Newtonsoft.Json;
@inject NavigationManager MyNavigationManager
@inject AppDataService.Services.AppData ad;
@inject BaseURLService.Services.BaseURL baseUrl;
@inject IJSRuntime JSRuntime

<style>
    .owl-carousel .nav-btn {
        height: 47px;
        position: absolute;
        width: 26px;
        cursor: pointer;
        top: 120px !important;
    }

    .nav-btn1 {
        height: 16px;
        position: absolute;
        width: 16px;
        cursor: pointer;
        top: -30px !important;
    }

    .owl-carousel .owl-prev.disabled,
    .owl-carousel .owl-next.disabled {
        pointer-events: none;
        opacity: 0.2;
    }

    .owl-carousel2 .prev-slide {
        background: url(icons/back.png) no-repeat scroll 0 0;
        left: -33px;
    }

    .owl-carousel2 .next-slide {
        background: url(icons/next.png) no-repeat scroll 0 0;
        right: -33px;
    }

    .owl-carousel1 .prev-slide {
        background: url(icons/back.png) no-repeat scroll 0 0;
        left: 25%;
    }

    .owl-carousel1 .next-slide {
        background: url(icons/next.png) no-repeat scroll 0 0;
        position: absolute;
        right: 25%;
    }

    span {
        text-align: center;
    }

    .blue-border {
        border: 2px solid #17A2B8;
    }

    .img-leader {
        height: 70px;
        width: 70px;
        margin-left : auto;
        margin-right : auto;
    }

    .min {
        min-height: 300px;
    }

    #footer {
        position: relative;
        bottom: 0;
        text-align: center;
        width: 100%;
        height: 110px;
        color: #a2a2a2;
        padding-top: 35px;
        padding-bottom: 15px;
    }

        #footer .f-menu {
            display: block;
            width: 100%;
            padding-left: 0;
            list-style: none;
            margin-left: -5px;
            margin-top: 8px;
        }

    ul.f-menu li {
        display: inline-block;
        padding-left: 5px;
        padding-right: 5px;
    }

    #footer .f-menu li a {
        text-decoration: none;
        color: #a2a2a2;
    }

        #footer .f-menu li a:hover {
            text-decoration: none;
            color: #777;
        }
</style>

<MatAppBarContainer>
    <MatAppBar Style="background-color: #4285F4;">
        <MatAppBarRow>
            <MatAppBarSection>
                <MatIconButton Icon="menu"></MatIconButton>
                <MatAppBarTitle>Welcome, @username</MatAppBarTitle>
            </MatAppBarSection>
            <MatIconButton OnClick="@(e => { logoutDialog = true; })" Icon="exit_to_app"></MatIconButton>
        </MatAppBarRow>
    </MatAppBar>

    <MatAppBarContent>
        <MatDialog @bind-IsOpen="@logoutDialog">
            <MatDialogTitle>Confirm Logout!</MatDialogTitle>
            <MatDialogContent>
                <p>Are you sure you want to Logout?</p>
            </MatDialogContent>
            <MatDialogActions>
                <MatButton OnClick="@(e => { logoutDialog = false; })">Cancel</MatButton>
                <MatButton OnClick="@(e => { logoutDialog = false; })" Link="@baseUrl.isocratesWebsite">Yes</MatButton>
            </MatDialogActions>
        </MatDialog>
        @if (blob != null)
        {
            <div class="container-fluid pl-5 pr-5 justify-content-center" style="width:98vw;">
                <div class="row mb-5">
                    <h4 style="margin-left:auto;margin-right:auto;margin-top:10px;" class="text-info">Recommended Videos</h4>
                    <div class="col-12 min">
                        <!-- recommended videos -->
                        <div class="large-12 columns">
                            <div class="owl-carousel owl-carousel2 owl-loaded">
                                @foreach (var single in vid)
                                {
                                    <div class="item">
                                        <iframe class="min col-12" src="@single.vidUrl" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                                    </div>
                                }

                            </div>
                        </div>
                    </div>
                </div>
                <div class="row justify-content-between mb-lg-3">
                    <div class="col-12 col-lg-6 mb-lg-0 mb-4" style="min-height: 150px;">
                        <div class="shadow mr-0 mr-lg-1">
                            <!-- reports -->
                            <div class="row">
                                <h4 style="margin-left:auto;margin-right:auto;margin-top:15px;" class="text-info">Reports</h4>
                            </div>
                            <div class="large-12 columns ">
                                <div class="owl-carousel1 owl-carousel owl-loaded justify-content-center" style="min-height: 140px; text-align:center; line-height:50px;">
                                    @foreach (var single in blob)
                                    {
                                        @if (single.filename.Contains("Sprint") || single.filename.Contains("Report"))
                                        {
                                            <NavLink href="@("Report/" + single.filename)" style="text-decoration: none; color: black;">
                                                <div class="item">
                                                    <MatIcon Icon="@MatIconNames.Insert_drive_file" Style="font-size:50px;"></MatIcon>
                                                    <br>
                                                    <h6 class="mt-2">@single.filename</h6>
                                                </div>
                                            </NavLink>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-lg-6" style="min-height: 140px;">
                        <div class="shadow ml-0 ml-lg-1">
                            <div class="row">
                                <h4 style="margin-left:auto;margin-right:auto; margin-top:15px;" class="text-info">Top Performers</h4>
                            </div>
                            <!-- top performers -->

                            <div class="row justify-content-around ml-lg-5 mr-lg-5 mt-2 ml-1 mr-1" style="min-height: 140px;">
                                <div class="align-self-center">
                                    <img class="img-leader" src="icons/Silver.jpg">
                                    <h6 class="text-center mt-3"><span class="badge badge-info">2<sup>nd</sup></span>&nbsp;Logeshwaran P</h6>
                                </div>
                                <div>
                                    <img class="img-leader" src="icons/Gold.jpg">
                                    <h6 class="text-center mt-3"><span class="badge badge-info">1<sup>st</sup></span>&nbsp;Vishwa Prasath P</h6>
                                </div>
                                <div class="align-self-center">
                                    <img class="img-leader" src="icons/Bronze.jpg">
                                    <h6 class="text-center mt-3"><span class="badge badge-info">3<sup>rd</sup></span>&nbsp;Sri Vignesh L</h6>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row justify-content-between mb-lg-3">
                    <div class="col-12 col-lg-6 mb-lg-0 mb-4" style="min-height: 150px;">
                        <div class="shadow mr-0 mr-lg-1">
                            <!-- assignments -->
                            <div class="row">
                                <h4 style="margin-left:auto;margin-right:auto;margin-top:15px;" class="text-info">Assignments</h4>
                            </div>
                            <div class="large-12 columns">
                                <div class="owl-carousel1 owl-carousel owl-loaded justify-content-center" style="min-height: 140px; text-align:center; line-height:50px;">
                                    @foreach (var single in blob)
                                    {
                                        @if (single.filename.Contains("Assn"))
                                        {
                                            <NavLink href="@("Assignment/" + single.filename)" style="text-decoration: none; color: black;">
                                                <div class="item">
                                                    <MatIcon Icon="@MatIconNames.Insert_drive_file" Style="font-size:50px;"></MatIcon>
                                                    <br>
                                                    <h6 class="mt-2">@single.filename</h6>
                                                </div>
                                            </NavLink>
                                        }
                                    }
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="col-12 col-lg-6" style="min-height: 150px;">
                        <div class="shadow ml-0 ml-lg-1">
                            <!-- attendance -->
                            <div class="row">
                                <h4 style="margin-left:auto;margin-right:auto;margin-top:15px;" class="text-info">Attendance</h4>
                            </div>
                            <div class="large-12 columns">
                                <div class="owl-carousel1 owl-carousel owl-loaded justify-content-center" style="min-height: 140px; text-align:center; line-height:50px;">
                                    @foreach (var single in blob)
                                    {
                                        @if (single.filename.Contains("Attn"))
                                        {
                                            <NavLink href="@("Attendance/" + single.filename)" style="text-decoration: none; color: black;">
                                                <div class="item">
                                                    <MatIcon Icon="@MatIconNames.Insert_drive_file" Style="font-size:50px;"></MatIcon>
                                                    <br>
                                                    <h6 class="mt-2">@single.filename</h6>
                                                </div>
                                            </NavLink>
                                        }
                                    }
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <footer id="footer">
                Copyright &copy; 2020 Isocrates.app
                <ul class="f-menu">
                    <li><a href="">Home</a></li>
                    <li><a href="">Dashboard</a></li>
                    <li><a href="">Reports</a></li>
                    <li><a href="">Support</a></li>
                    <li><a href="">Contact</a></li>
                </ul>
            </footer>
        }
    </MatAppBarContent>
</MatAppBarContainer>
@code {
    [Parameter]
    public string username { get; set; }
    Boolean logoutDialog = false;
    public class Blob
    {
        public string blobfile { get; set; }
        public string blobfilename { get; set; }
        public string filename => blobfilename.Substring(blobfilename.LastIndexOf("/") + 1);
    }
    public class Video
    {
        public string vidUrl { get; set; }
    }
    Blob[] blob;
    string res;
    Video[] vid;
    protected override async Task OnInitializedAsync()
    {
        res = await Http.GetStringAsync(baseUrl.allReports + ad.username.ToLower());
        //res = await Http.GetStringAsync(baseUrl.myGit);
        //Console.WriteLine(res);
        blob = JsonConvert.DeserializeObject<Blob[]>(res);
        foreach (Blob temp in blob)
        {
            if (temp.filename.Equals("Recommended_Videos.json"))
            {
                string vidRes = await Http.GetStringAsync(temp.blobfilename);
                vid = JsonConvert.DeserializeObject<Video[]>(vidRes);
                break;
            }
        }
    }
    protected override void OnAfterRender(bool firstRender)
    {
       JSRuntime.InvokeAsync<string>("sliderFunctions.startSlider", null);
    }

}
